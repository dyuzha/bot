import logging
from aiogram import Router, types, F
from aiogram.types import Message
from aiogram.filters import Command, StateFilter
from bot.keyboards import main_kb
from aiogram.fsm.context import FSMContext
from bot.states import BaseStates


logger = logging.getLogger(__name__)
router = Router()


START_MESSAGE = (
    "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ü–†–û–§–ò–¢-–±–æ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å GLPI.\n"
    "–° –º–æ–µ–π –ø–æ–º–æ—â—å—é –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É."
)

AUTH_REQUIRED_MESSAGE = (
    "–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è\n"
    "–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –ª–æ–≥–∏–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –≤ –≤–∞—à–µ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ "
    "(–Ω–∞–ø—Ä–∏–º–µ—Ä: <code>ivanov_ii</code>):"
)

def check_register(id):
    """–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –±—É–¥–µ—Ç –ø–æ—Ç–æ–º"""
    user_id = 1
    login = 1
    if login is None:
        logger.info(f"User {user_id} needs authorization")
        return False
    return True


@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    await state.clear()
    await main_menu(message, state)


async def main_menu(message: Message, state: FSMContext):
    user_id = message.from_user.id
    if check_register(id) is None:
        await state.set_state(BaseStates.waiting_autorisation)
        await message.answer(AUTH_REQUIRED_MESSAGE, reply_markup=main_kb())
        return
    await state.set_state(BaseStates.complete_autorisation)
    await message.answer(START_MESSAGE, reply_markup=main_kb())
