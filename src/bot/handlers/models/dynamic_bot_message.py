from aiogram.types import Message, InlineKeyboardMarkup
from aiogram.fsm.context import FSMContext

class DynamicBotMessage:
    def __init__(self, head: str = "üìù –î–µ—Ç–∞–ª–∏ –∑–∞—è–≤–∫–∏", separator: str = "\n\n"):
        self.head = head
        self.separator = separator

    async def add_field(self, state: FSMContext, key: str, value: str):
        """
        –î–æ–±–∞–≤–ª—è–µ—Ç –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –ø–æ–ª–µ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è.
        key ‚Äî –∏–º—è –ø–æ–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–û–ø–∏—Å–∞–Ω–∏–µ')
        value ‚Äî –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–£ –Ω–∞—Å —Å–ª–æ–º–∞–ª–∞—Å—å 1–°')
        """
        data = await state.get_data()
        fields = data.get("dynamic_fields", {})
        fields[key] = value
        await state.update_data(dynamic_fields=fields)

    async def render(self, state: FSMContext, *strings) -> str:
        """
        –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—Å–µ—Ö —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –ø–æ–ª–µ–π –∏
        –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å—Ç—Ä–æ–∫
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ edit_message_text.
        """
        data = await state.get_data()
        fields = data.get("dynamic_fields", {})

        parts = [self.head]
        parts.extend(f"{key}: {value}" for key, value in fields.items())
        parts.extend(s for s in strings if s)

        return self.separator.join(parts)

    async def update_message(self, message: Message, state: FSMContext, *strings):
        """
        –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞, –∏–∑–≤–ª–µ–∫–∞—è –µ–≥–æ –∏–∑ navigation-—Å—Ç–µ–∫–∞.
        –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª—ë–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
        """
        data = await state.get_data()
        stack = data.get("navigation_data", {}).get("stack", [])

        if not stack:
            return

        last_bot_msg = stack[-1]
        message_id = last_bot_msg.get("message_id", message.message_id - 1)
        keyboard: InlineKeyboardMarkup = last_bot_msg.get("keyboard")

        text = await self.render(state, strings)

        await message.bot.edit_message_text(
            chat_id=message.chat.id,
            message_id=message_id,
            text=text,
            reply_markup=keyboard,
        )

    async def reset(self, state: FSMContext):
        """–û—á–∏—â–∞–µ—Ç –≤—Å–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –ø–æ–ª—è"""
        await state.update_data(dynamic_fields={})
